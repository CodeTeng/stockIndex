<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lt.stock.mapper.StockMarketIndexInfoMapper">

    <resultMap id="BaseResultMap" type="com.lt.stock.pojo.entity.StockMarketIndexInfo">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="markId" column="mark_Id" jdbcType="CHAR"/>
        <result property="curTime" column="cur_time" jdbcType="TIMESTAMP"/>
        <result property="markName" column="mark_name" jdbcType="VARCHAR"/>
        <result property="curPoint" column="cur_point" jdbcType="DECIMAL"/>
        <result property="currentPrice" column="current_price" jdbcType="DECIMAL"/>
        <result property="updownRate" column="updown_rate" jdbcType="DECIMAL"/>
        <result property="tradeAccount" column="trade_account" jdbcType="BIGINT"/>
        <result property="tradeVolume" column="trade_volume" jdbcType="BIGINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,mark_Id,cur_time,
        mark_name,cur_point,current_price,
        updown_rate,trade_account,trade_volume
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from stock_market_index_info
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from stock_market_index_info
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lt.stock.pojo.entity.StockMarketIndexInfo"
            useGeneratedKeys="true">
        insert into stock_market_index_info
        ( id, mark_Id, cur_time
        , mark_name, cur_point, current_price
        , updown_rate, trade_account, trade_volume)
        values ( #{id,jdbcType=VARCHAR}, #{markId,jdbcType=CHAR}, #{curTime,jdbcType=TIMESTAMP}
               , #{markName,jdbcType=VARCHAR}, #{curPoint,jdbcType=DECIMAL}, #{currentPrice,jdbcType=DECIMAL}
               , #{updownRate,jdbcType=DECIMAL}, #{tradeAccount,jdbcType=BIGINT}, #{tradeVolume,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.lt.stock.pojo.entity.StockMarketIndexInfo"
            useGeneratedKeys="true">
        insert into stock_market_index_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="markId != null">mark_Id,</if>
            <if test="curTime != null">cur_time,</if>
            <if test="markName != null">mark_name,</if>
            <if test="curPoint != null">cur_point,</if>
            <if test="currentPrice != null">current_price,</if>
            <if test="updownRate != null">updown_rate,</if>
            <if test="tradeAccount != null">trade_account,</if>
            <if test="tradeVolume != null">trade_volume,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=VARCHAR},</if>
            <if test="markId != null">#{markId,jdbcType=CHAR},</if>
            <if test="curTime != null">#{curTime,jdbcType=TIMESTAMP},</if>
            <if test="markName != null">#{markName,jdbcType=VARCHAR},</if>
            <if test="curPoint != null">#{curPoint,jdbcType=DECIMAL},</if>
            <if test="currentPrice != null">#{currentPrice,jdbcType=DECIMAL},</if>
            <if test="updownRate != null">#{updownRate,jdbcType=DECIMAL},</if>
            <if test="tradeAccount != null">#{tradeAccount,jdbcType=BIGINT},</if>
            <if test="tradeVolume != null">#{tradeVolume,jdbcType=BIGINT},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lt.stock.pojo.entity.StockMarketIndexInfo">
        update stock_market_index_info
        <set>
            <if test="markId != null">
                mark_Id = #{markId,jdbcType=CHAR},
            </if>
            <if test="curTime != null">
                cur_time = #{curTime,jdbcType=TIMESTAMP},
            </if>
            <if test="markName != null">
                mark_name = #{markName,jdbcType=VARCHAR},
            </if>
            <if test="curPoint != null">
                cur_point = #{curPoint,jdbcType=DECIMAL},
            </if>
            <if test="currentPrice != null">
                current_price = #{currentPrice,jdbcType=DECIMAL},
            </if>
            <if test="updownRate != null">
                updown_rate = #{updownRate,jdbcType=DECIMAL},
            </if>
            <if test="tradeAccount != null">
                trade_account = #{tradeAccount,jdbcType=BIGINT},
            </if>
            <if test="tradeVolume != null">
                trade_volume = #{tradeVolume,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lt.stock.pojo.entity.StockMarketIndexInfo">
        update stock_market_index_info
        set mark_Id       = #{markId,jdbcType=CHAR},
            cur_time      = #{curTime,jdbcType=TIMESTAMP},
            mark_name     = #{markName,jdbcType=VARCHAR},
            cur_point     = #{curPoint,jdbcType=DECIMAL},
            current_price = #{currentPrice,jdbcType=DECIMAL},
            updown_rate   = #{updownRate,jdbcType=DECIMAL},
            trade_account = #{tradeAccount,jdbcType=BIGINT},
            trade_volume  = #{tradeVolume,jdbcType=BIGINT}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="getMarketInfo" resultType="com.lt.stock.pojo.vo.InnerMarketResponseVo">
        select tmp.*,
        smlp.pre_close_price as preClosePrice,
        smlp.open_price as openPrice
        from (select smii.trade_account as tradeAmt,
        smii.mark_Id as code,
        smii.mark_name as name,
        date_format(smii.cur_time, '%Y%m%d%H%i') as curDate,
        smii.trade_volume as tradeVol,
        smii.updown_rate as upDown,
        smii.current_price as tradePrice
        from stock_market_index_info as smii
        where
        smii.cur_time = #{timePoint} and
        smii.mark_Id in
        <foreach collection="marketIds" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>) as tmp
        left join stock_market_log_price as smlp
        on tmp.code = smlp.market_code and
        date_format(smlp.cur_date, '%Y%m%d') = date_format(#{timePoint}, '%Y%m%d');
    </select>

    <select id="getStockTradeAccountCount" resultType="java.util.Map">
        select date_format(smii.cur_time, '%Y%m%d%H%i') as time,
        sum(smii.trade_volume) as count
        from stock_market_index_info as smii
        where smii.mark_Id in
        <foreach collection="marketIds" item="marketId" open="(" close=")" separator=",">
            #{marketId}
        </foreach>
        and smii.cur_time between #{startTime} and #{endTime}
        group by smii.cur_time
        order by time;
    </select>
</mapper>
