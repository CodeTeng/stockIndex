<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lt.stock.mapper.StockBlockRtInfoMapper">

    <resultMap id="BaseResultMap" type="com.lt.stock.pojo.entity.StockBlockRtInfo">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="label" column="label" jdbcType="VARCHAR"/>
        <result property="blockName" column="block_name" jdbcType="VARCHAR"/>
        <result property="companyNum" column="company_num" jdbcType="INTEGER"/>
        <result property="avgPrice" column="avg_price" jdbcType="DECIMAL"/>
        <result property="updownRate" column="updown_rate" jdbcType="DECIMAL"/>
        <result property="tradeAmount" column="trade_amount" jdbcType="BIGINT"/>
        <result property="tradeVolume" column="trade_volume" jdbcType="DECIMAL"/>
        <result property="curTime" column="cur_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,label,block_name,
        company_num,avg_price,updown_rate,
        trade_amount,trade_volume,cur_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from stock_block_rt_info
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from stock_block_rt_info
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lt.stock.pojo.entity.StockBlockRtInfo"
            useGeneratedKeys="true">
        insert into stock_block_rt_info
        ( id, label, block_name
        , company_num, avg_price, updown_rate
        , trade_amount, trade_volume, cur_time)
        values ( #{id,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}, #{blockName,jdbcType=VARCHAR}
               , #{companyNum,jdbcType=INTEGER}, #{avgPrice,jdbcType=DECIMAL}, #{updownRate,jdbcType=DECIMAL}
               , #{tradeAmount,jdbcType=BIGINT}, #{tradeVolume,jdbcType=DECIMAL}, #{curTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.lt.stock.pojo.entity.StockBlockRtInfo" useGeneratedKeys="true">
        insert into stock_block_rt_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="label != null">label,</if>
            <if test="blockName != null">block_name,</if>
            <if test="companyNum != null">company_num,</if>
            <if test="avgPrice != null">avg_price,</if>
            <if test="updownRate != null">updown_rate,</if>
            <if test="tradeAmount != null">trade_amount,</if>
            <if test="tradeVolume != null">trade_volume,</if>
            <if test="curTime != null">cur_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=VARCHAR},</if>
            <if test="label != null">#{label,jdbcType=VARCHAR},</if>
            <if test="blockName != null">#{blockName,jdbcType=VARCHAR},</if>
            <if test="companyNum != null">#{companyNum,jdbcType=INTEGER},</if>
            <if test="avgPrice != null">#{avgPrice,jdbcType=DECIMAL},</if>
            <if test="updownRate != null">#{updownRate,jdbcType=DECIMAL},</if>
            <if test="tradeAmount != null">#{tradeAmount,jdbcType=BIGINT},</if>
            <if test="tradeVolume != null">#{tradeVolume,jdbcType=DECIMAL},</if>
            <if test="curTime != null">#{curTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.lt.stock.pojo.entity.StockBlockRtInfo">
        update stock_block_rt_info
        <set>
            <if test="label != null">
                label = #{label,jdbcType=VARCHAR},
            </if>
            <if test="blockName != null">
                block_name = #{blockName,jdbcType=VARCHAR},
            </if>
            <if test="companyNum != null">
                company_num = #{companyNum,jdbcType=INTEGER},
            </if>
            <if test="avgPrice != null">
                avg_price = #{avgPrice,jdbcType=DECIMAL},
            </if>
            <if test="updownRate != null">
                updown_rate = #{updownRate,jdbcType=DECIMAL},
            </if>
            <if test="tradeAmount != null">
                trade_amount = #{tradeAmount,jdbcType=BIGINT},
            </if>
            <if test="tradeVolume != null">
                trade_volume = #{tradeVolume,jdbcType=DECIMAL},
            </if>
            <if test="curTime != null">
                cur_time = #{curTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lt.stock.pojo.entity.StockBlockRtInfo">
        update stock_block_rt_info
        set label        = #{label,jdbcType=VARCHAR},
            block_name   = #{blockName,jdbcType=VARCHAR},
            company_num  = #{companyNum,jdbcType=INTEGER},
            avg_price    = #{avgPrice,jdbcType=DECIMAL},
            updown_rate  = #{updownRate,jdbcType=DECIMAL},
            trade_amount = #{tradeAmount,jdbcType=BIGINT},
            trade_volume = #{tradeVolume,jdbcType=DECIMAL},
            cur_time     = #{curTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="getStockBlockRtInfoAllLimit" resultType="com.lt.stock.pojo.vo.StockBlockResponseVo">
        select sbri.company_num                     as companyNum,
               sbri.trade_amount                    as tradeAmt,
               sbri.label                           as code,
               sbri.avg_price                       as avgPrice,
               sbri.block_name                      as name,
               date_format(sbri.cur_time, '%Y%m%d') as curDate,
               sbri.trade_volume                    as tradeVol,
               sbri.updown_rate                     as updownRate
        from stock_block_rt_info as sbri
        where sbri.cur_time = #{timePoint}
        order by sbri.trade_volume desc
        limit 10;
    </select>

    <select id="getStockMinute" resultType="com.lt.stock.pojo.vo.StockMinuteResponseVo">
        # 统计指定股票 T 日每分钟的交易数据
        select date_format(sri.cur_time, '%Y%m%d%H%i') as date,
               sri.trade_amount                        as tradeAmt,
               sri.stock_code                          as code,
               sri.min_price                           as lowPrice,
               sri.pre_close_price                     as preClosePrice,
               sri.stock_name                          as name,
               sri.max_price                           as highPrice,
               sri.open_price                          as openPrice,
               sri.trade_volume                        as tradeVol,
               sri.cur_price                           as tradePrice
        from stock_rt_info sri
        where sri.cur_time between #{startTime} and #{endTime}
          and sri.stock_code = #{code};
    </select>

    <select id="getStockUpDown" resultType="java.util.Map">
        <![CDATA[
        select tmp2.title,
               count(*) as count
        from (select case
                         when tmp.updown > 0.07 then '>%7'
                         when tmp.updown > 0.05 and tmp.updown <= 0.07 then '5~7%'
                         when tmp.updown > 0.03 and tmp.updown <= 0.05 then '3~5%'
                         when tmp.updown > 0 and tmp.updown <= 0.03 then '0~3%'
                         when tmp.updown > -0.03 and tmp.updown <= 0 then '-3~0%'
                         when tmp.updown > -0.05 and tmp.updown <= -0.03 then '-5~-3%'
                         when tmp.updown > -0.07 and tmp.updown <= -0.05 then '-7~-5%'
                         else '<-7%'
                         end as title
              from (select (sri.cur_price - sri.pre_close_price) / sri.pre_close_price as updown
                    from stock_rt_info as sri
                    where sri.cur_time = #{date}) as tmp) as tmp2
        group by tmp2.title
        ]]>
    </select>

    <select id="getStockDay" resultType="com.lt.stock.pojo.vo.StockDayResponseVo">
        select date_format(sri2.cur_time, '%Y%m%d') as date,
               sri2.trade_amount                    as tradeAmt,
               sri2.stock_code                      as code,
               sri2.min_price                       as lowPrice,
               sri2.stock_name                      as name,
               sri2.max_price                       as highPrice,
               sri2.cur_price                       as openPrice,
               sri2.trade_volume                    as tradeVol,
               sri2.cur_price                       as closePrice,
               sri2.pre_close_price                 as preClosePrice
        from stock_rt_info sri2
        where sri2.stock_code = #{code}
          and sri2.cur_time in (select max(sri.cur_time) as closeDate
                                from stock_rt_info sri
                                where sri.stock_code = #{code}
                                  and sri.cur_time between #{startDate} and #{endDate}
                                group by date_format(sri.cur_time, '%Y%m%d'))
        order by sri2.cur_time;
    </select>

    <select id="getCloseDates" resultType="java.util.Date">
        select max(sri.cur_time) as closeDate
        from stock_rt_info as sri
        where sri.stock_code = #{code}
          and sri.cur_time between #{startDate} and #{endDate}
        group by date_format(sri.cur_time, '%Y%m%d')
    </select>

    <select id="getStockDayByDates" resultType="com.lt.stock.pojo.vo.StockDayResponseVo">
        select
        date_format(sri2.cur_time,'%Y%m%d') as date,
        sri2.trade_amount as tradeAmt,
        sri2.stock_code as code,
        sri2.min_price as lowPrice,
        sri2.stock_name as name,
        sri2.max_price as highPrice,
        sri2.open_price as openPrice,
        sri2.trade_volume as tradeVol,
        sri2.cur_price as closePrice,
        sri2.pre_close_price as preClosePrice
        from stock_rt_info as sri2
        where sri2.stock_code=#{code} and sri2.cur_time in
        <foreach collection="dates" item="date" open="(" close=")" separator=",">
            #{date}
        </foreach>
    </select>

    <insert id="insertBatch">
        insert into stock_block_rt_info
        ( id,label,block_name
        ,company_num,avg_price,updown_rate
        ,trade_amount,trade_volume,cur_time
        )
        values
        <foreach collection="list" item="bi" separator=",">
            (#{bi.id,jdbcType=BIGINT},#{bi.label,jdbcType=VARCHAR},#{bi.blockName,jdbcType=VARCHAR}
            ,#{bi.companyNum,jdbcType=INTEGER},#{bi.avgPrice,jdbcType=DECIMAL},#{bi.updownRate,jdbcType=DECIMAL}
            ,#{bi.tradeAmount,jdbcType=BIGINT},#{bi.tradeVolume,jdbcType=DECIMAL},#{bi.curTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>
</mapper>
